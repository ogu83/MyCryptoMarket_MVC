@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager

@{
    ViewData["Title"] = "Home";
}

@if (!SignInManager.IsSignedIn(User))
{
    <div class="text-center">
        <h1 class="display-4">Welcome to MyCryptoMarket</h1>
    </div>
}
else 
{
    <div class="">
        <h1>Market Data</h1>
        <div id="gridContainer"></div>
    </div>
}

@section Scripts {
    <script>
        $(function() {

            function isNotEmpty(value) {
                return value !== undefined && value !== null && value !== "";
            }

            isSignIn = '@(SignInManager.IsSignedIn(User))' == 'True';

            if (isSignIn) {
                var store = new DevExpress.data.CustomStore({
                    key: "Symbol",
                    load: function (loadOptions) {
                        var deferred = $.Deferred(),
                            args = {};

                        [
                            "skip",
                            "take",
                            "requireTotalCount",
                            "requireGroupCount",
                            "sort",
                            "filter",
                            "totalSummary",
                            "group",
                            "groupSummary"
                        ].forEach(function(i) {
                            if (i in loadOptions && isNotEmpty(loadOptions[i]))
                                args[i] = JSON.stringify(loadOptions[i]);
                        });
                        $.ajax({
                            url: "/Home/OnGet24hTickers",
                            method: "POST",
                            dataType: "json",
                            data: args,
                            success: function(result) {
                                deferred.resolve(result.data, {
                                    totalCount: result.totalCount,
                                    summary: result.summary,
                                    groupCount: result.groupCount
                                });
                            },
                            error: function() {
                                deferred.reject("Data Loading Error");
                            },
                            timeout: 50000
                        });

                        return deferred.promise();
                    }
                });

                $("#gridContainer").dxDataGrid({
                    dataSource: store,                                
                    remoteOperations: true,
                    showBorders: true,
                    paging: {
                        pageSize: 10
                    },
                    pager: {
                        showPageSizeSelector: true,
                        allowedPageSizes: [5, 10, 15, 20, 25, 50, 100]
                    },
                    searchPanel: {
                        visible: true,                    
                        placeholder: "Search a Symbol"
                    },
                    columns: [{
                        dataField: "Symbol",
                        caption: "Symbol",
                        dataType: "string"
                    }, {
                        dataField: "WeightedAvgPrice",
                        caption: "Price",
                        dataType: "number"
                    }, {
                        dataField: "PriceChangePercent100",
                        caption: "24h Change",
                        dataType: "number",
                        format: {
                            type: "percent"
                        }
                    }, {
                        dataField: "HighPrice",
                        caption: "24h High",
                        dataType: "number"
                    }, {
                        dataField: "LowPrice",
                        caption: "24h Low",
                        dataType: "number"
                    }, {
                        dataField: "Volume",
                        caption: "24h Volume",
                        dataType: "number",
                        format: {
                            type: "decimal"
                        }
                    }, {
                        caption: "Action",
                        cellTemplate: function(content, options) {
                            var symbol = options.data.Symbol;
                            content.html(`<a class="btn btn-sm btn-primary" href="/Trade/?symbol=${symbol}">Trade</a>`);
                        }
                    }]
                }).dxDataGrid("instance");
            }
        })
    </script>
}